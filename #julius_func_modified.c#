#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <netdb.h>
#include "julius_func.h"

void julius_get(char *myword)
{
  int s;//      
  int  datalen;//    
  struct sockaddr_in skt;//      
        char buf[16384] = {'\0'};
        in_port_t port;//       
        struct in_addr ipaddr;//  IP    
        socklen_t sktlen;//        


	system*

        //      
        myword[0] = '\0';
        //IP       
        char ip[20] = HOST_ADDR;//192.168.0.124
        inet_aton(ip, &ipaddr);

        //        
        port = 10500;
        skt.sin_family = AF_INET;
        skt.sin_port = htons(port);
        skt.sin_addr.s_addr = ipaddr.s_addr;
        //       
        if ((s = socket(PF_INET, SOCK_STREAM, 0)) < 0) {
                perror("socket");
                exit(1);
        }
        printf("socket ok\n");
        //        
        if (connect(s, (struct sockaddr *)&skt, sizeof(skt)) < 0) {
                perror("connect");
                exit(1);
        }
        printf("connected\n");
        //   
        while(myword[0] == '\0'){
          //          
                sktlen = sizeof(skt);
                if (recv(s, buf, sizeof(buf), 0) < 0) {
                        perror("recv");
                        exit(1);
                }
                char *ret;//first parse

                if ((ret = strstr(buf, "WORD")) != NULL) {
                  ret += 6;
                  int i;
                  for (i = 0; *(ret + i) != '"'; i++) {
                                myword[i] = *(ret + i);
                        }
                        myword[i] = '\0';
                }
                memset(&buf, 0, sizeof(buf));//         
        }
        close(s);
        return;
}
